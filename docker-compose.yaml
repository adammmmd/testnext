services:
  traefik:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.muhammadam90@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  nextjs:
    image: ghcr.io/adammmmd/testnext:${GIT_COMMIT_HASH:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.nextjs.loadbalancer.server.port=3000"
      - "traefik.http.routers.nextjs.rule=Host(`adammmmd.cloud`)"
      - "traefik.http.routers.nextjs.entrypoints=websecure"
      - "traefik.http.routers.nextjs.tls.certresolver=myresolver"
    # environment:
    #   - DATABASE_URL=postgres://postgres:${DB_PASSWORD}@db:5432/app
    #   - NODE_ENV=production
    # secrets:
    #   - db-password
    deploy:
      update_config:
        order: start-first
    # depends_on:
    #   - db

  # db:
  #   image: postgres:latest
  #   user: postgres
  #   volumes:
  #     - db-data:/var/lib/postgresql/data
  #   secrets:
  #     - db-password
  #   environment:
  #     - POSTGRES_DB=app
  #     - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
  #   healthcheck:
  #     test: [ "CMD", "pg_isready" ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

volumes:
  # db-data:
  letsencrypt:

# secrets:
#   db-password:
#     external: true